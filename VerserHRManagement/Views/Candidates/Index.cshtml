@model VerserHRManagement.Models.Candidate
@using VerserHRManagement.HelperServices;
<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>
<link href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.3.1.js"></script>
<script src=" https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
<script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.js"></script>
<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.js"></script>

<div class="container-fluid" style="margin-left:0px;padding-top:0px">
    <div class="container" style="width:170%; padding-top:15px; margin-left:0px; border-color:lightgray;padding-left:0px">
        <div class="col-md-4">
            <table class="table table-bordered  table-responsive table-hover table-dark" id="mainTable" style="margin-bottom:2Px" >
                <thead style="background-color: #428bca; color:white">
                    <tr>
                        <th>
                            @Html.DisplayName("CANDIDATES")
                        </th>
                        <th>
                            @Html.DisplayName("Skills")
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.CandidateList)
                    {
                        <tr>
                            <td onclick="LoadAddressData(@item.ID,'@item.CandidateName','@item.DateCreated','@item.Address','@item.City','@item.state','@item.postcode','@item.Email','@item.Phone',
                                '@if(item.profilePicture != null) { @Convert.ToBase64String(@item.profilePicture)}','@if (item.DOB.HasValue) {@item.DOB.Value.ToString("yyyy-MM-dd")}','@item.Age','@item.Gender','@item.MaritalStatus',@Json.Encode(item.isactive));
                                LoadEmployment(@item.ID,'@item.PayFrequency','@item.ADP_EmployeeID','@item.AssignResource','@item.Annualsalary','@item.HourlyRate','@item.DailyRate','@item.WorkRights',
                                '@item.EmployeeStatus','@item.EmployementType','@item.NoticePeriod');
                                LoadDocuments(@item.ID,'@item.FilePath','@item.certificate1','@item.DriverLicense','@item.PoliceCheckReport','@item.Visa','@item.SuperChoice','@item.TFNDeclaration',
                                '@item.BankDetails','@item.CodeOFConduct','@item.WHS');
                                LoadSkills(@item.ID,'@item.CandidateSkills','@item.Experience','@item.JobTitle','@item.TechnicianLevel','@item.RateOfSkillExperties');">
                                <font style="font-weight:800;color:#515151">
                                    @Html.DisplayFor(modelItem => item.CandidateName)
                                    <input type="hidden" value="@item.ID" id="hiddenModelId" />
                                    <input type="hidden" value='@Server.MapPath("~/UploadedFiles")' id="hiddenPath" />
                                </font> <font style="font-size:xx-small">@item.City @item.state </font> <br />
                            </td>
                            <td>  @item.CandidateSkills</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
              <div class="col-md-6">
            <div class="panel with-nav-tabs panel-default" style="width:200%;margin-bottom:0px">
                <div class="panel-heading">
                    <ul class="nav nav-tabs">
                        <li class="active"><a href="#tab1default" data-toggle="tab">PERSONAL</a></li>
                        <li><a href="#tab2default" data-toggle="tab">EMPLOYMENT</a></li>
                        <li><a href="#tab3default" data-toggle="tab">SKILLS</a></li>
                        @if (UserRoles.UserCanEdit() == true)
                        {
                            <li><a href="#tab4default" data-toggle="tab">DOCUMENTS</a></li>
                        }
                        <li><a href="#tab5default" data-toggle="tab">PERFORMANCE</a></li>
                        <li class="pull-right" style="margin-right:100px">

                            @if (UserRoles.UserCanEdit() == true)
                            {
                                using (Html.BeginForm("ExportTimesSheetToExcel", "Candidates", FormMethod.Post))
                                {
                                    <input type="image" src="~/Images/excel.png" alt="Submit" width="20" height="20">
                                }
                            }
                        </li></ul>    
                </div>
                <div class="panel-body" style="margin-bottom:0px">
                    <div class="tab-content" style="padding-bottom:0px">
                        <div class="tab-pane fade in active" id="tab1default">
                            <div class="col-md-6"  style="padding-left:0px">
                                <div class="row">
                                    <form>
                                        <div class="container table-bordered" style="margin:20px; width:1000px;padding-top:0px;padding-bottom:0px;margin-top:2px">
                                            <div class="form-group row">
                                                <div class="col-sm-6">
                                                    <div class="col-sm-10">
                                                        <img class="preview-img" src="http://simpleicon.com/wp-content/uploads/account.png" alt="Preview Image" width="120" height="120" id="previewImage" onchange="readURL(this);" />
                                                        <img id="image" class="image-border form-control form-control-sm" width="120" height="120">
                                                        <input type="file" id="imgupload" style="display:none" onchange="readURL(this);" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <div class="col-md-5" style="margin-left:10px;">
                                                    <label>First Name</label>
                                                    <input type="text" id="txtfName" class="form-control-override" placeholder="First Name">
                                                </div>
                                                <div class="col-md-5">
                                                    <label>Last Name</label>
                                                    <input type="text" id="txtlName" class="form-control-override" placeholder="Last Name">
                                                </div><br /><br /><br /><br />
                                                <div class="col-md-5" style="margin-left:10px;">
                                                    <label>DOB</label>
                                                    <input type="date" class="form-control-override" id="txtDOB" placeholder="DOB" onchange="calculateAge(this);">
                                                </div>
                                                <div class="col-md-5">
                                                    <label>Age</label>
                                                    <input type="text" class="form-control-override" id="txtAge" placeholder="Age">
                                                </div><br />
                                                <div class="col-md-5" style="margin-left:10px;">
                                                    <label>Gender</label>
                                                    <select class="form-control-override" id="txtGender">
                                                        <option>Select</option>
                                                        <option>Male</option>
                                                        <option>Female</option>
                                                    </select>
                                                </div>
                                                <div class="col-md-5">
                                                    <label>Marital Status</label>
                                                    <select class="form-control-override" id="txtStatus">
                                                        <option>Married</option>
                                                        <option>Single</option>
                                                    </select>
                                                </div><br /><br /><br /><br /><br /><br />
                                                <div class="col-md-5" style="margin-left:10px;">
                                                    <label>Active</label>
                                                    <input type="checkbox" checked data-toggle="toggle" data-onstyle="info" id="chkIsActive">
                                                </div>
                                            </div>
                                            <div style="font-size:smaller;color:deepskyblue">
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class="row grid-divider">
                                    <div class="row" style="margin-left:20px;">
                                        <fieldset>
                                            <div class="form-group row">
                                                <div class="container table-bordered" style="margin:20px; margin-top:0px;width:1000px;padding-top:5px;padding-bottom:5px">
                                                    <div class="col-md-8" style="margin-left:10px;">
                                                        <label>Address:</label>
                                                        <div class="input-group">
                                                            <span class="input-group-addon">
                                                                <i class="glyphicon glyphicon-home"></i>
                                                            </span><input id="txtAddress1" placeholder="Address Line 1" class="form-control" required="true" value="" type="text">
                                                        </div>


                                                    </div>
                                                    <br /><br /><br /><br />
                                                    <div class="col-md-3" style="margin-left:10px;">
                                                        <label>City:</label>
                                                        <div class="input-group">
                                                            <span class="input-group-addon">
                                                                <i class="glyphicon glyphicon-home"></i>
                                                            </span><input id="txtCity" placeholder="Suburb" class="form-control" required="true" value="" type="text">
                                                        </div>
                                                    </div>
                                                    <div class="col-md-3">
                                                        <label>State:</label>
                                                        <div class="input-group">
                                                            <span class="input-group-addon">
                                                                <i class="glyphicon glyphicon-home"></i>
                                                            </span><input id="txtState" placeholder="State" class="form-control" required="true" value="" type="text">
                                                        </div>
                                                    </div>
                                                    <div class="col-md-3">
                                                        <label>Postal Code:</label>
                                                        <div class="input-group">
                                                            <span class="input-group-addon">
                                                                <i class="glyphicon glyphicon-home"></i>
                                                            </span><input id="txtPostalCode" placeholder="Postal Code" class="form-control" required="true" value="" type="text">
                                                        </div>
                                                    </div><br /><br /><br />
                                                    <div class="col-md-3" style="margin-left:10px;">
                                                        <label>Email:</label>
                                                        <div class="input-group">
                                                            <span class="input-group-addon">
                                                                <i class="glyphicon glyphicon-envelope"></i>
                                                            </span><input id="txtEmail" placeholder="Email" class="form-control" required="true" value="" type="text">
                                                        </div>
                                                    </div>
                                                    <div class="col-md-3">
                                                        <label>Mobile</label>
                                                        <div class="input-group">
                                                            <span class="input-group-addon">
                                                                <i class="glyphicon glyphicon-earphone"></i>
                                                            </span><input id="txtMobile" placeholder="Phone Number" class="form-control" required="true" value="" type="text">
                                                        </div>
                                                    </div>
                                                    <div class="col-md-3">
                                                        <label>Phone</label>

                                                        <div class="input-group">
                                                            <span class="input-group-addon">
                                                                <i class="glyphicon glyphicon-earphone"></i>
                                                            </span><input id="txtPhoneNumber" placeholder="Phone Number" class="form-control" required="true" value="" type="text">
                                                        </div>

                                                    </div>  <br /><br /><br />
                                                    <div class="col-md-3"style="margin-left:10px;">
                                                        <label>Warehouse:</label>
                                                        <div class="input-group">
                                                            <span class="input-group-addon">
                                                                <i class="glyphicon glyphicon-home"></i>
                                                            </span> @Html.DropDownListFor(model => model.WarehouseID, Model.WarehouseNameList, "WAREHOUSE", new { @class = "form-control", id = "ddlWarehouseId" })
                                                        </div>

                                                    </div>
                                                    @*<div class="col-md-3">
            <label>Resource Categories:</label>
            <div class="input-group">
                <span class="input-group-addon">
                    <i class="glyphicon glyphicon-home"></i>
                </span> @Html.DropDownListFor(model => model.ResourceCategoriesID, Model.ResourceCategoriesList, "Resource Categories", new { @class = "form-control" })
            </div>

        </div>
        <div class="col-md-3">
            <label>Driving License:</label>
            <div class="input-group">
                <span class="input-group-addon">
                    <i class="glyphicon glyphicon-home"></i>
                </span>  @Html.DropDownListFor(model => model.DrivingLicenseID, Model.DrivingLicensesList, "Driver License", new { @class = "form-control" })
            </div>

        </div>*@


                                                </div>
                                            </div>
                                        </fieldset>
                                    </div>
                                </div>                           
                            </div>
                        </div>
                        <div class="tab-pane fade" id="tab2default">
                            <div class="row" style="margin-left:10px">
                                <div class="form-group row">
                                    <div class=" row col-md-6 well" style="width:370px;height:390px">
                                        <div class="col-md-12" style="margin-top:15px;">
                                            <label class="col-sm-9 col-form-label col-form-label-sm">Pay Frequency</label>
                                            @Html.DropDownListFor(model => model.PayFrequencyID, Model.PayFrequencyList, "Pay Frequency", new { @class = "form-control", id = "ddlPayFrequencyId" })
                                        </div>
                                        <div class="col-md-12" style="margin-top:15px;">
                                            <label class="col-sm-9 col-form-label col-form-label-sm">ADP Employee Id</label>
                                            <input type="text" id="txtADPEmployeeId" class="form-control form-control-sm" placeholder="ADP Employee Id">
                                        </div>
                                        <div class="col-md-12" style="margin-top:15px;">
                                            <label class="col-sm-9 col-form-label col-form-label-sm">Resource Assigned</label>
                                            @Html.DropDownListFor(model => model.AssignResourceID, Model.AssignResourceList, "AssignResource", new { @class = "form-control", id = "ddlResourceAssigned" })
                                        </div>

                                        <div class="col-md-12" style="margin-top:15px;">
                                            <label class="col-sm-9 col-form-label col-form-label-sm">Annual Salary</label>
                                            <input type="text" class="form-control form-control-sm" id="txtAnnualSalary" placeholder="Annual Salary">
                                        </div>
                                        <div class="col-md-12" style="margin-top:15px;">
                                            <label class="col-sm-9 col-form-label col-form-label-sm">Hourly Rate</label>
                                            <input type="text" class="form-control form-control-sm" id="txtHourlyRate" placeholder="Hourly Rate">
                                        </div>
                                    </div>
                                    <div class=" row col-md-6 well" style="width:370px;height:390px">
                                        <div class="col-md-12" style="margin-top:15px;">
                                            <label class="col-sm-9 col-form-label col-form-label-sm">Daily Rate</label>
                                            <input type="text" class="form-control form-control-sm" id="txtDailyRate" placeholder="Daily Rate">
                                        </div>
                                        <div class="col-md-12" style="margin-top:15px;">
                                            <label class="col-sm-9 col-form-label col-form-label-sm">Work Rights</label>
                                            @Html.DropDownListFor(model => model.WorkRights, Model.WorkRightsList, "Works Rights", new { @class = "form-control", id = "ddlWorkRights" })
                                        </div>
                                        <div class="col-md-12" style="margin-top:15px;">
                                            <label class="col-sm-9 col-form-label col-form-label-sm">Employment Status</label>
                                            @Html.DropDownListFor(model => model.EmployeeStatusID, Model.EmployeeStatusList, "Employment Status", new { @class = "form-control", id = "ddlEmployeeStatusId" })
                                        </div>
                                        <div class="col-md-12" style="margin-top:15px;">
                                            <label class="col-sm-9 col-form-label col-form-label-sm">Employment Type</label>
                                            @Html.DropDownListFor(model => model.EmploymentTypeID, Model.EmploymentList, "Employment Type", new { @class = "form-control", id = "ddlEmploymentType" })
                                        </div>
                                        <div class="col-md-12" style="margin-top:15px;">
                                            <label class="col-sm-9 col-form-label col-form-label-sm">Notice Period</label>
                                            <input type="text" class="form-control form-control-sm" id="txtNoticePeriod" placeholder="Notice Period">
                                        </div>
                                    </div>
                                </div>                              
                            </div>
                        </div>
                        <div class="tab-pane fade" id="tab3default">
                            <br>
                            <div class="row pull-left" style="margin-left:-1px">
                                <div class="row pull-left" style="margin-left:-1px">
                                    <div class="form-group row">
                                        <div class="col-md-5" style="margin-left:10px;">
                                            <label class="col-sm-9 col-form-label col-form-label-sm">Candidate Skills</label>

                                            <input type="text" id="candidateskills" class="form-control form-control-sm" placeholder="candidateskills">

                                        </div>
                                        <div class="col-md-5">
                                            <label class="col-sm-9 col-form-label col-form-label-sm">Experience</label>

                                            <input type="text" id="experience" class="form-control form-control-sm" placeholder="experience">

                                        </div><br /><br /><br /><br />
                                        <div class="col-md-5" style="margin-left:10px;">
                                            <label class="col-sm-9 col-form-label col-form-label-sm">Job Title</label>

                                            <input type="text" class="form-control form-control-sm" id="JobTitle" placeholder="JobTitle">
                                        </div>
                                        <div class="col-md-5">
                                            <label class="col-sm-9 col-form-label col-form-label-sm">Technician Level</label>
                                            <input type="text" class="form-control form-control-sm" id="TechnicianLevel" placeholder="TechnicianLevel">
                                        </div><br /><br /><br /><br />
                                        <div class="col-md-5" style="margin-left:10px;">
                                            <label class="col-sm-9 col-form-label col-form-label-sm">Skill Rate</label>
                                            <input type="text" class="form-control form-control-sm" id="skillrate" placeholder="skillrate">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="tab5default">
                            <div class="row pull-right">
                                <div class="row pull-right">
                                    <div class="col-md-1">
                                        @using (Html.BeginForm("ExportTimesSheetToExcel", "Assets", FormMethod.Post))
                                        {
                                            <input type="image" src="~/Images/excel.png" alt="Submit" width="20" height="20">
                                        }
                                    </div>
                                    <div class="col-md-1">
                                        <input type="image" src="~/Images/plus.png" alt="Submit" width="20" height="20" id="addEndUser">
                                    </div>
                                    <div class="col-md-1">
                                        <input type="image" src="~/Images/pencil.png" alt="Submit" width="20" height="20" id="editEnduser">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="tab4default" style="font:x-small">
                            <div class="col-md-12">
                                <div class="panel panel-default">
                                    <div class="panel-heading"><strong>RESUME</strong> <small> </small></div>
                                    <div class="panel-body">
                                        <div class="input-group image-preview">
                                            @Html.Hidden("Resume", null, new { @id = "hiddenResume" })
                                            @Html.ActionLink("Resume", "DownloadFile", "Candidates", new { textval = "" }, new { @id = "resume", @class = "actionlink" })
                                            <!-- don't give a name === doesn't send on POST/GET -->
                                            <span class="input-group-btn-override">
                                                <input id="CVimgupload" type="file" style="display:none;">
                                                <button id="btnCV" type="button" class="btn btn-sm btn-labeled btn-outline-secondary" style="padding-left:20px;border-color:gray">
                                                    <span class="btn-label"><i class="glyphicon glyphicon-folder-open"></i> </span>Resume
                                                </button>
                                            </span>
                                        </div>
                                        <br>
                                        <div class="input-group image-preview">
                                            @Html.Hidden("Resume", null, new { @id = "hiddenCertificate" })
                                            @Html.ActionLink("Certificates", "DownloadFile", "Candidates", new { textval = "" }, new { @id = "certificate", @class = "actionlink" })
                                            <!-- don't give a name === doesn't send on POST/GET -->
                                            <span class="input-group-btn-override">
                                                <input id="Certificateimgupload" type="file" style="display:none;">
                                                <button type="button" id="btnCertificates" class="btn btn-sm btn-labeled btn-outline-secondary" style="padding-left:20px;border-color:gray">
                                                    <span class="btn-label"><i class="glyphicon glyphicon-folder-open"></i> </span>Certificate
                                               </button>
                                            </span>
                                        </div>
                                    </div>
                                                       <div class="panel-heading"><strong>LEGAL</strong> <small> </small></div>
                                    <div class="panel-body">
                                        <div class="input-group image-preview">
                                            @Html.Hidden("Resume", null, new { @id = "hiddenDL" })
                                            @Html.ActionLink("Driving License", "DownloadFile", "Candidates", new { textval = "" }, new { @id = "DL", @class = "actionlink" })
                                            <!-- don't give a name === doesn't send on POST/GET -->
                                            <span class="input-group-btn-override">
                                                <input type="file" id="DLimgupload" style="display:none" onchange="ReadFileName(this,'DLimgupload');" />
                                                <button id="btnDL" type="button" class="btn btn-labeled btn-sm btn-outline-secondary" style="padding-left:20px;border-color:gray">
                                                    <span class="btn-label"><i class="glyphicon glyphicon-folder-open"></i> </span>DL
                                                </button>

                                            </span>
                                        </div><br>
                                        <div class="input-group image-preview">
                                            @Html.Hidden("Resume", null, new { @id = "hiddenPC" })
                                            @Html.ActionLink("Police Check", "DownloadFile", "Candidates", new { textval = "" }, new { @id = "PC", @class = "actionlink" })
                                            <!-- don't give a name === doesn't send on POST/GET -->
                                            <span class="input-group-btn-override">
                                                <input type="file" id="PCimgupload" style="display:none" onchange="ReadFileName(this,'PCimgupload');" />
                                                <button type="button" id="btnPC" class="btn btn-labeled btn-sm btn-outline-secondary" style="padding-left:20px;border-color:gray">
                                                    <span class="btn-label"><i class="glyphicon glyphicon-folder-open"></i> </span>Police Check
                                                </button>

                                            </span>
                                        </div>
                                        <br>
                                        <div class="input-group image-preview">
                                            @Html.Hidden("Resume", null, new { @id = "hiddenVisa" })
                                            @Html.ActionLink("Visa", "DownloadFile", "Candidates", new { textval = "" }, new { @id = "visa", @class = "actionlink" })
                                            <!-- don't give a name === doesn't send on POST/GET -->
                                            <span class="input-group-btn-override">
                                                <input type="file" id="Visaimgupload" style="display:none" onchange="ReadFileName(this,'Visaimgupload');" />
                                                <button type="button" id="btnVisa" class="btn btn-labeled btn-sm btn-outline-secondary" style="padding-left:20px;border-color:gray">
                                                    <span class="btn-label"><i class="glyphicon glyphicon-folder-open"></i> </span>Visa
                                                </button>

                                            </span>
                                        </div>
                                    </div>

                                    <div class="panel-heading"><strong>PERSONAL DETAILS</strong> <small> </small></div>
                                    <div class="panel-body">
                                        <div class="input-group image-preview">
                                            @Html.Hidden("Resume", null, new { @id = "hiddenSuper" })
                                            @Html.ActionLink("Super Form", "DownloadFile", "Candidates", new { textval = "" }, new { @id = "super", @class = "actionlink" })
                                            <!-- don't give a name === doesn't send on POST/GET -->
                                            <span class="input-group-btn-override">
                                                <input type="file" id="Superimgupload" style="display:none" onchange="ReadFileName(this,'Superimgupload');" />
                                                <button type="button" id="btnSuper" class="btn btn-labeled btn-sm btn-outline-secondary" style="padding-left:20px;border-color:gray">
                                                    <span class="btn-label"><i class="glyphicon glyphicon-folder-open"></i> </span>Super Form
                                                </button>

                                            </span>
                                        </div><br>
                                        <div class="input-group image-preview">
                                            @Html.Hidden("Resume", null, new { @id = "hiddenTNF" })
                                            @Html.ActionLink("TNF", "DownloadFile", "Candidates", new { textval = "" }, new { @id = "tnf", @class = "actionlink" })
                                            <!-- don't give a name === doesn't send on POST/GET -->
                                            <span class="input-group-btn-override">
                                                <input type="file" id="TNFimgupload" style="display:none" onchange="ReadFileName(this,'TNFimgupload');" />
                                                <button type="button" id="btnTNF" class="btn btn-labeled btn-sm btn-outline-secondary" style="padding-left:20px;border-color:gray">
                                                    <span class="btn-label"><i class="glyphicon glyphicon-folder-open"></i> </span>TNF
                                                </button>

                                            </span>
                                        </div>
                                        <br>
                                        <div class="input-group image-preview">
                                            @Html.Hidden("Resume", null, new { @id = "hiddenBank" })
                                            @Html.ActionLink("Bank Details", "DownloadFile", "Candidates", new { textval = "" }, new { @id = "bank", @class = "actionlink" })
                                            <!-- don't give a name === doesn't send on POST/GET -->
                                            <span class="input-group-btn-override">
                                                <input type="file" id="Bankimgupload" style="display:none" onchange="ReadFileName(this,'Bankimgupload');" />
                                                <button type="button" id="btnBank" class="btn btn-labeled btn-sm btn-outline-secondary" style="padding-left:20px;border-color:gray">
                                                    <span class="btn-label"><i class="glyphicon glyphicon-folder-open"></i> </span>Bank Details
                                                </button>

                                            </span>
                                        </div>
                                    </div>

                                    <div class="panel-heading"><strong>POLICIES</strong> <small> </small></div>
                                    <div class="panel-body">
                                        <div class="input-group image-preview">
                                            @Html.Hidden("Resume", null, new { @id = "hiddenCode" })
                                            @Html.ActionLink("Code Of Conduct", "DownloadFile", "Candidates", new { textval = "" }, new { @id = "code", @class = "actionlink" })
                                            <!-- don't give a name === doesn't send on POST/GET -->
                                            <span class="input-group-btn-override">
                                                <input type="file" id="Codeimgupload" style="display:none" onchange="ReadFileName(this,'Codeimgupload');" />
                                                <button type="button" id="btnCode" class="btn btn-labeled btn-sm btn-outline-secondary" style="padding-left:20px;border-color:gray">
                                                    <span class="btn-label"><i class="glyphicon glyphicon-folder-open"></i> </span>Code-Of-Conduct
                                                </button>

                                            </span>
                                        </div><br>
                                        <div class="input-group image-preview">
                                            @Html.Hidden("Resume", null, new { @id = "hiddenWhs" })
                                            @Html.ActionLink("WHS", "DownloadFile", "Candidates", new { textval = "" }, new { @id = "whs", @class = "actionlink" })
                                            <!-- don't give a name === doesn't send on POST/GET -->
                                            <span class="input-group-btn-override">
                                                <input type="file" id="Whsimgupload" style="display:none" onchange="ReadFileName(this,'Whsimgupload');" />
                                                <button type="button" id="btnWhs" class="btn btn-sm btn-labeled btn-outline-secondary" style="padding-left:20px;border-color:gray">
                                                    <span class="btn-label"><i class="glyphicon glyphicon-folder-open"></i> </span>WHS
                                                </button>
                                            </span>
                                        </div>
                                        <br>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                     <div class="panel-footer primary" align="left" style="height:40px;vertical-align:top;background-color:lightgrey;margin-bottom:0px">
                    @if (UserRoles.UserCanEdit() == true)
                    {
                    <input type="submit" value="SAVE CHANGES" class="btn btn-primary"
                           style="background-color:#428bca;border-color:#428bca"
                           id="updateEmploymentDetailsBtn" />
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<body>
    <script type="text/javascript" charset="utf8" src="//cdn.datatables.net/1.10.15/js/jquery.dataTables.js"></script>
    <script src="https://cdn.datatables.net/plug-ins/1.10.15/api/row().show().js"></script>
</body>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
        $(document).ready(function () {
            $('#mainTable').DataTable({
                "pageLength": 20,
                "lengthMenu": [10, 15, 20, 25, 50],
                "aoColumnDefs": [
                    { "bSearchable": true, "bVisible": false, "aTargets": [1] }
                    
                ] 
            });
            $('#mainTable1').DataTable();
            $('#mainTable2').DataTable();
            $('#mainTable3').DataTable();
            $('#mainTable4').DataTable();
            $('#mainTable5').DataTable();
            if ($("#image").src == null) {
                $("#image").hide();
                $("#previewImage").show();
            }
            else {
                $("#image").show();
                $("#previewImage").hide();
            }
        });
        //  ExportTimesSheetToExcel", "Candidates"

        function ExportData() {
            var data = {};
            $.ajax({
                type: "POST",
                url: './ExportTimesSheetToExcel',
                json: data

            });
        }
        function LoadAddressData(ID, CandidateName, DateCreated, Address, City, state, postcode, Email, Phone, logo, dob, age, gender, maritalstatus,isactive) {
            $("#txtfName").val(CandidateName.split(' ')[0]);
            $("#txtlName").val(CandidateName.split(' ')[1]);
            $("#txtAddress1").val(Address);
            $("#txtAddress2").val(Address);
            $("#txtCity").val(City);
            $("#txtState").val(state);
            $("#txtPostalCode").val(postcode);
            $("#txtEmail").val(Email);
            $("#txtMobile").val(Phone);
            $("#txtDOB").val(dob);
            $("#txtAge").val(age);
            $("#txtGender").val(gender);
            $("#chkIsActive").prop('checked', isactive).change();
           // $('#yourCheckboxId').prop('checked', true);
            $("#txtStatus").val(maritalstatus);
            if (logo != "") {
                $("#previewImage").hide();
                $("#image").show();
                $("#image").attr("src", "data:image/jpeg;base64," + logo + "").height(100).width(200);
            }
            else {
                $("#previewImage").show();
                $("#image").hide();
            }


        }
        function LoadDocuments(id,FilePath, certificate1, DriverLicense, PoliceCheckReport, Visa, SuperChoice, TFNDeclaration, BankDetails, CodeOFConduct, WHS) {
        //alert(FilePath);

        $("#hiddenResume").val(FilePath);
        $("#hiddenCertificate").val(certificate1);
        $("#hiddenDL").val(DriverLicense);
        $("#hiddenPC").val(PoliceCheckReport);
        $("#hiddenVisa").val(Visa);
        $("#hiddenSuper").val(SuperChoice);
        $("#hiddenTNF").val(TFNDeclaration);
        $("#hiddenBank").val(BankDetails);
        $("#hiddenCode").val(CodeOFConduct);
        $("#hiddenWhs").val(WHS);
        $("#hiddenModelId").val(id);

        }
        function LoadSkills(id,CandidateSkills,Experience,JobTitle,TechnicianLevel,RateOfSkillExperties) {

        $("#candidateskills").val(CandidateSkills);
        $("#experience").val(Experience);
        $("#JobTitle").val(JobTitle);
        $("#TechnicianLevel").val(TechnicianLevel);
        $("#skillrate").val(RateOfSkillExperties);
        $("#hiddenModelId").val(id);
}

        $("#resume").click(function() {
        if($("#hiddenResume").val() == null || $("#hiddenResume").val() == "")
        {
             $.confirm({
                title:'',
                content: 'There is no file to download. Please upload the Resume.',
                boxWidth: '370px',
                useBootstrap: false,
                buttons: {
                    OK: function () {

                    }
                }
                    });
        return false;
        }
            //Get the id of the selected item in dropdown
         $('#resume').attr('href', function () {

        return "@Url.Action("DownloadFile")"+ "/?textval="  +'resume:'+$("#hiddenResume").val();

        });
        });

        $("#certificate").click(function() {

        if($("#hiddenCertificate").val() == null || $("#hiddenCertificate").val() == "")
        {
             $.confirm({
                title:'',
                content: 'There is no file to download. Please upload the Certificates.',
                boxWidth: '370px',
                useBootstrap: false,
                buttons: {
                    OK: function () {

                    }
                }
                    });
        return false;
        }
            //Get the id of the selected item in dropdown
         $('#certificate').attr('href', function () {

        return "@Url.Action("DownloadFile")"+ "/?textval="  +'certificate:'+$("#hiddenCertificate").val();

    });
        });

        $("#DL").click(function() {

        if($("#hiddenDL").val() == null || $("#hiddenDL").val() == "")
        {
             $.confirm({
                title:'',
                content: 'There is no file to download. Please upload the DL.',
                boxWidth: '370px',
                useBootstrap: false,
                buttons: {
                    OK: function () {

                    }
                }
                    });
        return false;
        }
            //Get the id of the selected item in dropdown
         $('#DL').attr('href', function () {

        return "@Url.Action("DownloadFile")"+ "/?textval="  +'dl:'+$("#hiddenDL").val();

    });
});

        $("#PC").click(function() {
        if($("#hiddenPC").val() == null || $("#hiddenPC").val() == "")
        {
             $.confirm({
                title:'',
                content: 'There is no file to download. Please upload the PC.',
                boxWidth: '370px',
                useBootstrap: false,
                buttons: {
                    OK: function () {

                    }
                }
                    });
        return false;
        }
            //Get the id of the selected item in dropdown
         $('#PC').attr('href', function () {

        return "@Url.Action("DownloadFile")"+ "/?textval="  +'pc:'+$("#hiddenPC").val();

    });
});

        $("#visa").click(function() {
            if($("#hiddenVisa").val() == null || $("#hiddenVisa").val() == "")
        {
             $.confirm({
                title:'',
                content: 'There is no file to download. Please upload the Visa.',
                boxWidth: '370px',
                useBootstrap: false,
                buttons: {
                    OK: function () {

                    }
                }
                    });
        return false;
        }
         $('#visa').attr('href', function () {

        return "@Url.Action("DownloadFile")"+ "/?textval="  +'visa:'+$("#hiddenVisa").val();

    });
});

        $("#super").click(function() {
      if($("#hiddenSuper").val() == null || $("#hiddenSuper").val() == "")
        {
             $.confirm({
                title:'',
                content: 'There is no file to download. Please upload the Super form.',
                boxWidth: '370px',
                useBootstrap: false,
                buttons: {
                    OK: function () {

                    }
                }
                    });
        return false;
        }
         $('#super').attr('href', function () {

        return "@Url.Action("DownloadFile")"+ "/?textval="  +'super:'+$("#hiddenSuper").val();

    });
});

        $("#bank").click(function() {
      if($("#hiddenBank").val() == null || $("#hiddenBank").val() == "")
        {
             $.confirm({
                title:'',
                content: 'There is no file to download. Please upload the Bank Details.',
                boxWidth: '370px',
                useBootstrap: false,
                buttons: {
                    OK: function () {

                    }
                }
                    });
        return false;
        }
         $('#bank').attr('href', function () {

        return "@Url.Action("DownloadFile")"+ "/?textval="  +'bank:'+$("#hiddenBank").val();

    });
});
       $("#tnf").click(function() {
     if($("#hiddenTNF").val() == null || $("#hiddenTNF").val() == "")
        {
             $.confirm({
                title:'',
                content: 'There is no file to download. Please upload the TNF Details.',
                boxWidth: '370px',
                useBootstrap: false,
                buttons: {
                    OK: function () {

                    }
                }
                    });
        return false;
        }
         $('#tnf').attr('href', function () {

        return "@Url.Action("DownloadFile")"+ "/?textval="  +'tnf:'+$("#hiddenTNF").val();

    });
  });
        $("#code").click(function() {
        if($("#hiddenCode").val() == null || $("#hiddenCode").val() == "")
        {
             $.confirm({
                title:'',
                content: 'There is no file to download. Please upload the Code Of Conduct Details.',
                boxWidth: '370px',
                useBootstrap: false,
                buttons: {
                    OK: function () {

                    }
                }
                    });
        return false;
        }
         $('#code').attr('href', function () {

        return "@Url.Action("DownloadFile")"+ "/?textval="  +'code:'+$("#hiddenCode").val();

    });
});

        $("#whs").click(function() {
        if($("#hiddenWhs").val() == null || $("#hiddenWhs").val() == "")
        {
             $.confirm({
                title:'',
                content: 'There is no file to download. Please upload the WHS Details.',
                boxWidth: '370px',
                useBootstrap: false,
                buttons: {
                    OK: function () {

                    }
                }
                    });
        return false;
        }
         $('#whs').attr('href', function (data) {

        return "@Url.Action("DownloadFile")"+ "/?textval="  +'whs:'+$("#hiddenWhs").val();

    });


     });


        function ReadFileName(input, controlName) {
            var ctrl = document.getElementById(controlName);
        }
        function readURL(input) {
            $('#image').show();
            $("#image").height(100).width(200);
            $('#previewImage').hide();
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#image')
                        .attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }
        @* $("#updateBtn").click(function () {
            var CandidateEdit = {};
            CandidateEdit.ID = $("#hiddenModelId").val();
            CandidateEdit.CandidateName = $("#txtfName").val() + ' ' + $("#txtlName").val();
            CandidateEdit.Address = $("#txtAddress1").val();
            CandidateEdit.DOB = $("#txtDOB").val();
            CandidateEdit.Gender = $("#txtGender").val();
            CandidateEdit.MaritalStatus = $("#txtStatus").val();
            CandidateEdit.City = $("#txtCity").val();
            CandidateEdit.State = $("#txtState").val();
            CandidateEdit.PostalCode = $("#txtPostalCode").val();
            CandidateEdit.Email = $("#txtEmail").val();
            CandidateEdit.Phone = $("#txtMobile").val();
            CandidateEdit.Age = $("#txtAge").val();
            CandidateEdit.isactive = $("#isActive").val();
            CandidateEdit.profilepicture = $("#image")[0].src.split(',')[1];

            var updateCandidateData = '@Url.Action("UpdateCandidate", "Candidates")';
            $.ajax({

                type: "POST",
                url: updateCandidateData,
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(CandidateEdit),
                datatype: "json",
                success: function (result) {

                    debugger;
                    $("#txtCompany").text(result);
                },
                error: function () {
                    alert("Dynamic content load failed.");
                }
            });
        });*@
        $('#image,#previewImage').click(function () { $('#imgupload').trigger('click'); });
       $('#btnCV').click(function () { $('#CVimgupload').trigger('click'); });
        $('#btnDL').click(function () { $('#DLimgupload').trigger('click'); });
        $('#btnPC').click(function () { $('#PCimgupload').trigger('click'); });
        $('#btnVisa').click(function () { $('#Visaimgupload').trigger('click'); });
        $('#btnCertificates').click(function () { $('#Certificateimgupload').trigger('click'); });
        $('#btnSuper').click(function () { $('#Superimgupload').trigger('click'); });
        $('#btnBank').click(function () { $('#Bankimgupload').trigger('click'); });
        $('#btnWhs').click(function () { $('#Whsimgupload').trigger('click'); });
        $('#btnCode').click(function () { $('#Codeimgupload').trigger('click'); });
        $('#btnTNF').click(function () { $('#TNFimgupload').trigger('click'); });

        $('#CVimgupload').on('change', function (event) {
            var formdata = new FormData(); //FormData object
            var fileInput = document.getElementById('CVimgupload');
            //Iterating through each files selected in fileInput
            for (i = 0; i < fileInput.files.length; i++) {
                //Appending each file to FormData object
                formdata.append(fileInput.files[i].name, fileInput.files[i]);
            }
            formdata.append("CandidateId", $("#hiddenModelId").val());
            formdata.append("FileUpload", "CVUpload");
            //Creating an XMLHttpRequest and sending
            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/HRMS/Candidates/UploadDocument');
            xhr.send(formdata);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                     $.confirm({

                content: 'The file has been uploaded successfully.',
                boxWidth: '370px',
                useBootstrap: false,
                buttons: {
                    OK: function () {

                    }
                }
                    });
                }
            }
        });
        $('#Certificateimgupload').on('change', function (event) {
            var formdata = new FormData(); //FormData object
            var fileInput = document.getElementById('Certificateimgupload');
            //Iterating through each files selected in fileInput
            for (i = 0; i < fileInput.files.length; i++) {
                //Appending each file to FormData object
                formdata.append(fileInput.files[i].name, fileInput.files[i]);
            }
            formdata.append("CandidateId", $("#hiddenModelId").val());
            formdata.append("FileUpload", "CertificateUpload");
            //Creating an XMLHttpRequest and sending
            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/HRMS/Candidates/UploadDocument');
            xhr.send(formdata);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                     $.confirm({

                content: 'The file has been uploaded successfully.',
                boxWidth: '370px',
                useBootstrap: false,
                buttons: {
                    OK: function () {

                    }
                }
                    });
                }
            }
        });
        $('#DLimgupload').on('change', function (event) {
            var formdata = new FormData(); //FormData object
            var fileInput = document.getElementById('DLimgupload');
            //Iterating through each files selected in fileInput
            for (i = 0; i < fileInput.files.length; i++) {
                //Appending each file to FormData object
                formdata.append(fileInput.files[i].name, fileInput.files[i]);
            }
            formdata.append("CandidateId", $("#hiddenModelId").val());
            formdata.append("FileUpload", "DL");
            //Creating an XMLHttpRequest and sending
            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/HRMS/Candidates/UploadDocument');
            xhr.send(formdata);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    $.confirm({

                content: 'The file has been uploaded successfully.',
                boxWidth: '370px',
                useBootstrap: false,
                buttons: {
                    OK: function () {

                    }
                }
                    });
                }
            }
        });
        $('#PCimgupload').on('change', function (event) {
            var formdata = new FormData(); //FormData object
            var fileInput = document.getElementById('PCimgupload');
            //Iterating through each files selected in fileInput
            for (i = 0; i < fileInput.files.length; i++) {
                //Appending each file to FormData object
                formdata.append(fileInput.files[i].name, fileInput.files[i]);
            }
            formdata.append("CandidateId", $("#hiddenModelId").val());
            formdata.append("FileUpload", "PC");
            //Creating an XMLHttpRequest and sending
            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/HRMS/Candidates/UploadDocument');
            xhr.send(formdata);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    $.confirm({

                content: 'The file has been uploaded successfully.',
                boxWidth: '370px',
                useBootstrap: false,
                buttons: {
                    OK: function () {

                    }
                }
                    });
                }
            }
        });
        $('#Visaimgupload').on('change', function (event) {
            var formdata = new FormData(); //FormData object
            var fileInput = document.getElementById('Visaimgupload');
            //Iterating through each files selected in fileInput
            for (i = 0; i < fileInput.files.length; i++) {
                //Appending each file to FormData object
                formdata.append(fileInput.files[i].name, fileInput.files[i]);
            }
            formdata.append("CandidateId", $("#hiddenModelId").val());
            formdata.append("FileUpload", "Visa");
            //Creating an XMLHttpRequest and sending
            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/HRMS/Candidates/UploadDocument');
            xhr.send(formdata);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    $.confirm({

                content: 'The file has been uploaded successfully.',
                boxWidth: '370px',
                useBootstrap: false,
                buttons: {
                    OK: function () {

                    }
                }
                    });
                }
            }
        });
        $('#Superimgupload').on('change', function (event) {
            var formdata = new FormData(); //FormData object
            var fileInput = document.getElementById('Superimgupload');
            //Iterating through each files selected in fileInput
            for (i = 0; i < fileInput.files.length; i++) {
                //Appending each file to FormData object
                formdata.append(fileInput.files[i].name, fileInput.files[i]);
            }
            formdata.append("CandidateId", $("#hiddenModelId").val());
            formdata.append("FileUpload", "Super");
            //Creating an XMLHttpRequest and sending
            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/HRMS/Candidates/UploadDocument');
            xhr.send(formdata);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                     $.confirm({

                content: 'The file has been uploaded successfully.',
                boxWidth: '370px',
                useBootstrap: false,
                buttons: {
                    OK: function () {

                    }
                }
                    });
                }
            }
        });
        $('#TNFimgupload').on('change', function (event) {
            var formdata = new FormData(); //FormData object
            var fileInput = document.getElementById('TNFimgupload');
            //Iterating through each files selected in fileInput
            for (i = 0; i < fileInput.files.length; i++) {
                //Appending each file to FormData object
                formdata.append(fileInput.files[i].name, fileInput.files[i]);
            }
            formdata.append("CandidateId", $("#hiddenModelId").val());
            formdata.append("FileUpload", "TNF");
            //Creating an XMLHttpRequest and sending
            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/HRMS/Candidates/UploadDocument');
            xhr.send(formdata);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    $.confirm({

                content: 'The file has been uploaded successfully.',
                boxWidth: '370px',
                useBootstrap: false,
                buttons: {
                    OK: function () {

                    }
                }
                    });
                }
            }
        });
        $('#Bankimgupload').on('change', function (event) {
            var formdata = new FormData(); //FormData object
            var fileInput = document.getElementById('Bankimgupload');
            //Iterating through each files selected in fileInput
            for (i = 0; i < fileInput.files.length; i++) {
                //Appending each file to FormData object
                formdata.append(fileInput.files[i].name, fileInput.files[i]);
            }
            formdata.append("CandidateId", $("#hiddenModelId").val());
            formdata.append("FileUpload", "Bank");
            //Creating an XMLHttpRequest and sending
            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/HRMS/Candidates/UploadDocument');
            xhr.send(formdata);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    $.confirm({

                content: 'The file has been uploaded successfully.',
                boxWidth: '370px',
                useBootstrap: false,
                buttons: {
                    OK: function () {

                    }
                }
                    });
                }
            }
        });
        $('#Codeimgupload').on('change', function (event) {
            var formdata = new FormData(); //FormData object
            var fileInput = document.getElementById('Codeimgupload');
            //Iterating through each files selected in fileInput
            for (i = 0; i < fileInput.files.length; i++) {
                //Appending each file to FormData object
                formdata.append(fileInput.files[i].name, fileInput.files[i]);
            }
            formdata.append("CandidateId", $("#hiddenModelId").val());
            formdata.append("FileUpload", "Code");
            //Creating an XMLHttpRequest and sending
            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/HRMS/Candidates/UploadDocument');
            xhr.send(formdata);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    $.confirm({

                content: 'The file has been uploaded successfully.',
                boxWidth: '370px',
                useBootstrap: false,
                buttons: {
                    OK: function () {

                    }
                }
                    });
                }
            }
        });
        $('#Whsimgupload').on('change', function (event) {
            var formdata = new FormData(); //FormData object
            var fileInput = document.getElementById('Whsimgupload');
            //Iterating through each files selected in fileInput
            for (i = 0; i < fileInput.files.length; i++) {
                //Appending each file to FormData object
                formdata.append(fileInput.files[i].name, fileInput.files[i]);
            }
            formdata.append("CandidateId", $("#hiddenModelId").val());
            formdata.append("FileUpload", "WHS");
            //Creating an XMLHttpRequest and sending
            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/HRMS/Candidates/UploadDocument');
            xhr.send(formdata);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    $.confirm({

                content: 'The file has been uploaded successfully.',
                boxWidth: '370px',
                useBootstrap: false,
                buttons: {
                    OK: function () {

                    }
                }
                    });
                }
            }
        });
        function LoadEmployment(id,PayFrequency, ADP_EmployeeID, AssignResource, Annualsalary, HourlyRate, DailyRate, WorkRights,
            EmployeeStatus, EmployementType, NoticePeriod) {
            $("#ddlPayFrequencyId option:contains(" + PayFrequency + ")").attr('selected', 'selected');
           // $("#ddlPayFrequencyId").val(PayFrequency);
            $("#txtADPEmployeeId").val(ADP_EmployeeID);
            $("#ddlResourceAssigned option:contains(" + AssignResource + ")").attr('selected', 'selected');
            $("#txtAnnualSalary").val(Annualsalary);
            $("#txtHourlyRate").val(HourlyRate);
            $("#txtDailyRate").val(DailyRate);
            $("#ddlWorkRights option:contains(" + WorkRights + ")").attr('selected', 'selected');
            $("#ddlEmployeeStatusId option:contains(" + EmployeeStatus + ")").attr('selected', 'selected');
            $("#ddlEmploymentType option:contains(" + EmployementType + ")").attr('selected', 'selected');
            $("#txtNoticePeriod").val(NoticePeriod);
            $("#hiddenModelId").val(id);
        }
        $("#updateEmploymentDetailsBtn").click(function () {
            var CandidateEdit = {};
            CandidateEdit.ID = $("#hiddenModelId").val();
            CandidateEdit.PayFrequency = $("#txtPayFrequency").val();
            CandidateEdit.ADP_EmployeeID = $("#txtADPEmployeeId").val();
            CandidateEdit.AssignResource = $("#txtResourceAssigned").val();
            CandidateEdit.Annualsalary = $("#txtAnnualSalary").val();
            CandidateEdit.HourlyRate = $("#txtHourlyRate").val();
            CandidateEdit.DailyRate = $("#txtDailyRate").val();
            CandidateEdit.WorkRights = $("#txtWorkRights").val();
            CandidateEdit.EmployeeStatus = $("#txtEmploymentStatus").val();
            CandidateEdit.EmployementType = $("#txtEmploymentType").val();
            CandidateEdit.NoticePeriod = $("#txtNoticePeriod").val();
            CandidateEdit.CandidateName = $("#txtfName").val() + ' ' + $("#txtlName").val();
            CandidateEdit.Address = $("#txtAddress1").val();
            CandidateEdit.DOB = $("#txtDOB").val();
            CandidateEdit.Gender = $("#txtGender").val();
            CandidateEdit.MaritalStatus = $("#txtStatus").val();
            CandidateEdit.City = $("#txtCity").val();
            CandidateEdit.State = $("#txtState").val();
            CandidateEdit.PostalCode = $("#txtPostalCode").val();
            CandidateEdit.Email = $("#txtEmail").val();
            CandidateEdit.Phone = $("#txtMobile").val();
            CandidateEdit.Age = $("#txtAge").val();
            CandidateEdit.isactive = $("#chkIsActive")[0].checked;
            CandidateEdit.profilepicture = $("#image")[0].src.split(',')[1];
            CandidateEdit.CandidateSkills =$("#candidateskills").val();
            CandidateEdit.Experience = $("#experience").val();
            CandidateEdit.JobTitle = $("#JobTitle").val();
            CandidateEdit.TechnicianLevel = $("#TechnicianLevel").val();
            CandidateEdit.RateOfSkillExperties = $("#skillrate").val();


            var updateCandidateData = '@Url.Action("UpdateCandidate", "Candidates")';
            $.ajax({
                type: "POST",
                url: updateCandidateData,
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(CandidateEdit),
                datatype: "json",
                success: function (result) {

                $.confirm({
                title:'',
                content: result,
                boxWidth: '370px',
                useBootstrap: false,
                buttons: {
                    OK: function () {

                    }
                }
                    });
                },
                error: function () {
                    alert("Dynamic content load failed.");
                }
            });
        });
        function calculateAge(dateString) {
            var val = $("#txtDOB").val();
            var birthdate = new Date(val);
            var cur = new Date();
            var diff = cur - birthdate; // This is the difference in milliseconds
            var age = Math.floor(diff / 31557600000);
            $("#txtAge").val(age);
        }
</script>
}
<style>

    .well {
        margin-left: 10px;
        margin-right: 10px;
        padding-top: 10px
    }

    .row.vdivide [class*='col-']:not(:last-child):after {
        background: #e0e0e0;
        width: 1px;
        content: "";
        display: block;
        position: absolute;
        top: 0;
        bottom: 0;
        right: 0;
        min-height: 70px;
    }

    .block {
        display: block;
        width: 100%;
        border: none;
        background-color: #4CAF50;
        padding: 14px 28px;
        font-size: 16px;
        cursor: pointer;
        text-align: center;
    }

    .image-preview-input {
        position: relative;
        overflow: hidden;
        margin: 0px;
        color: #333;
        background-color: #fff;
        border-color: #ccc;
    }

        .image-preview-input input[type=file] {
            position: absolute;
            top: 0;
            right: 0;
            margin: 0;
            padding: 0;
            font-size: 20px;
            cursor: pointer;
            opacity: 0;
            filter: alpha(opacity=0);
        }

    .image-preview-input-title {
        margin-left: 2px;
    }

    .col-padding {
        padding: 0 15px;
    }

    .panel-footer {
        padding: 3px 20px;
        background-color: #f5f5f5;
        border-top: 1px solid #dddddd;
        border-bottom-right-radius: 0px;
        border-bottom-left-radius: 0px;
        width: 100%
    }

    .glyphicon {
        font-size: 14px;
        color: black;
    }

    .grid-divider {
        position: relative;
        padding: 0;
        width: 1000px;
    }

    image-border {
        padding: 1px;
        border: 1px solid #021a40;
    }

    .grid-divider > [class*='col-'] {
        position: static;
    }

        .grid-divider > [class*='col-']:nth-child(n+2):before {
            content: "";
            border-left: 1px solid #DDD;
            position: absolute;
            top: 0;
            bottom: 0;
        }

    .col-padding {
        padding: 0 15px;
    }

    .btn-primary, .btn-primary:hover, .btn-primary:active, .btn-primary:visited {
        background-color: #FFA500;
        border-color: white;
    }

    .btn-warning {
        background-color: #FFA500;
        font-size: 11px;
    }

    .black {
        color: black;
    }

    body {
        padding-top: 40px;
        padding-bottom: 5px;
        /*margin-left:5px;*/
    }

    /* Set padding to keep content from hitting the edges */
    .body-content {
        padding-left: 0px;
        padding-right: 5px;
        margin-left: 5px;
    }

    .dataTables_filter {
        float: right;
    }

    .container {
        font-size: 12px;
        padding-left: 5px;
        padding-right: 5px;
    }

    .page-item.active .page-link {
        color: white !important;
        background-color: orange !important;
        border-color: gray !important;
    }

    .btn-primary, .btn-primary:hover, .btn-primary:active, .btn-primary:visited {
        background-color: #FFA500;
        border-color: white;
    }

        .btn-primary, .btn-primary:hover, .btn-primary:active, .btn-primary:visited {
            background-color: #FFA500;
            border-color: white;
        }

    .tab-pane {
        border-color: lightgray
    }

    .page-item.active .page-link {
        color: white !important;
        background-color: orange !important;
        border-color: gray !important;
    }

    .col-md-6 {
        -webkit-box-flex: 0;
        -ms-flex: 0 0 50%;
        flex: 0 0 50%;
        max-width: 50%
    }

    .col-md-6 {
        position: relative;
        width: 100%;
        min-height: 1px;
        padding-top: 10px;
        padding-bottom: 10px;
        padding-right: 15px;
        padding-left: 5px
    }

    .table-hover tbody tr:hover > td {
        background-color: gra;
    }

    .datatable tr:nth-child(odd) {
        background-color: #dfe7f2;
        color: #000;
    }

    table.dataTable.row-border tbody th, table.dataTable.row-border tbody td, table.dataTable.display tbody th, table.dataTable.display tbody td {
        border-top: 1px solid #ddd;
    }

    table.dataTable, table.dataTable th, table.dataTable td {
        box-sizing: content-box;
    }

        table.dataTable tbody th, table.dataTable tbody td {
            padding: 8px 10px;
        }

    .with-nav-tabs.panel-default .nav-tabs > li > a,
    .with-nav-tabs.panel-default .nav-tabs > li > a:hover,
    .with-nav-tabs.panel-default .nav-tabs > li > a:focus {
        color: #777;
    }

        .with-nav-tabs.panel-default .nav-tabs > .open > a,
        .with-nav-tabs.panel-default .nav-tabs > .open > a:hover,
        .with-nav-tabs.panel-default .nav-tabs > .open > a:focus,
        .with-nav-tabs.panel-default .nav-tabs > li > a:hover,
        .with-nav-tabs.panel-default .nav-tabs > li > a:focus {
            color: #777;
            background-color: #ddd;
            border-color: transparent;
        }

    .with-nav-tabs.panel-default .nav-tabs > li.active > a,
    .with-nav-tabs.panel-default .nav-tabs > li.active > a:hover,
    .with-nav-tabs.panel-default .nav-tabs > li.active > a:focus {
        color: #FFFFFF;
        background-color: #1372AB;
        border-color: #FFFFFF;
        border-bottom-color: transparent;
    }

    .with-nav-tabs.panel-default .nav-tabs > li.dropdown .dropdown-menu {
        background-color: #f5f5f5;
        border-color: #ddd;
    }

        .with-nav-tabs.panel-default .nav-tabs > li.dropdown .dropdown-menu > li > a {
            color: #777;
        }

            .with-nav-tabs.panel-default .nav-tabs > li.dropdown .dropdown-menu > li > a:hover,
            .with-nav-tabs.panel-default .nav-tabs > li.dropdown .dropdown-menu > li > a:focus {
                background-color: #ddd;
            }

        .with-nav-tabs.panel-default .nav-tabs > li.dropdown .dropdown-menu > .active > a,
        .with-nav-tabs.panel-default .nav-tabs > li.dropdown .dropdown-menu > .active > a:hover,
        .with-nav-tabs.panel-default .nav-tabs > li.dropdown .dropdown-menu > .active > a:focus {
            color: #fff;
            background-color: #555;
        }
    /********************************************************************/
    /*** PANEL PRIMARY ***/
    .with-nav-tabs.panel-primary .nav-tabs > li > a,
    .with-nav-tabs.panel-primary .nav-tabs > li > a:hover,
    .with-nav-tabs.panel-primary .nav-tabs > li > a:focus {
        color: #fff;
    }

        .with-nav-tabs.panel-primary .nav-tabs > .open > a,
        .with-nav-tabs.panel-primary .nav-tabs > .open > a:hover,
        .with-nav-tabs.panel-primary .nav-tabs > .open > a:focus,
        .with-nav-tabs.panel-primary .nav-tabs > li > a:hover,
        .with-nav-tabs.panel-primary .nav-tabs > li > a:focus {
            color: #fff;
            background-color: #FFFFFF;
            border-color: transparent;
        }

    .with-nav-tabs.panel-primary .nav-tabs > li.active > a,
    .with-nav-tabs.panel-primary .nav-tabs > li.active > a:hover,
    .with-nav-tabs.panel-primary .nav-tabs > li.active > a:focus {
        color: #428bca;
        background-color: #fff;
        border-color: #428bca;
        border-bottom-color: transparent;
    }

    .with-nav-tabs.panel-primary .nav-tabs > li.dropdown .dropdown-menu {
        background-color: #FFFFFF;
        border-color: #3071a9;
    }

        .with-nav-tabs.panel-primary .nav-tabs > li.dropdown .dropdown-menu > li > a {
            color: #FFFFFF;
        }

            .with-nav-tabs.panel-primary .nav-tabs > li.dropdown .dropdown-menu > li > a:hover,
            .with-nav-tabs.panel-primary .nav-tabs > li.dropdown .dropdown-menu > li > a:focus {
                background-color: #3071a9;
            }

        .with-nav-tabs.panel-primary .nav-tabs > li.dropdown .dropdown-menu > .active > a,
        .with-nav-tabs.panel-primary .nav-tabs > li.dropdown .dropdown-menu > .active > a:hover,
        .with-nav-tabs.panel-primary .nav-tabs > li.dropdown .dropdown-menu > .active > a:focus {
            background-color: #4a9fe9;
        }

    .form-control-override {
        display: block;
        width: 70%;
        height: 30px;
        padding: 6px 8px;
        font-size: 12px;
        line-height: 1.428571429;
        color: #555555;
        vertical-align: middle;
        background-color: #ffffff;
        border: 1px solid #cccccc;
        border-radius: 4px;
    }
    .input-group-btn-override {
        height: 45px;
        padding: 15px 18px;
        font-size: 15px;
        line-height: 1.33;
        border-radius: 6px;
    }

    .actionlink {
        font-size: larger;
        color: seagreen;
    }
</style>
